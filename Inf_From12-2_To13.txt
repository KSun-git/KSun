§12장_어노테이션을 이용한 스프링 설정

12-2-1.Java파일분리
    통상적으로 기능단위로 분리.
    참조하는 경우 => 자동주입@Autowired
    AnnotationConfigApplicationContext에서는 배열형식으로
    콤마(,)를 구분자로 나열하여 명시해준다.

12-2-2.@Import
    콤마구분자로 나열하지않고 Import어노테이션을 사용할수도 있다.
    통합할 최종Config 클래스파일에서 Import로 전부 넣어준 후,

        @Configuration
        @Import({Config2.class, Config3.class})
        public class Config1{
        ...
        }

    Config1 클래스파일만 설정파일로 생성해서 사용한다.

=======================================
§13장_웹프로그래밍 설계 모델

13-1.웹 프로그래밍 구축 설계모델
    Model1 : 모듈화하지않고, 해당페이지에서 모든 기능 구현.
                 (개발속도는빠르나, 유지보수에 어려움이있다.)
    Model2 : 각각의 기능을 모듈화하여 구현.
                 View : 사용자에게 보여지는 페이지
                 Controller : 사용자의 요청&응답 제어
                 Service : 어플리케이션 수행 기능
                 DAO : 데이터베이스연동된작업

13-2★.스프링 MVC프레임워크 설계 구조
    기본적으로 Model2방식 사용.
    (구조도 그림으로 정리하여 확인하세요.
      Client/DispatcherServlet/HandlerMapping/
      HandlerAdapter/Controller/ViewResolver/View)

13-3.DispatcherServlet 설정
    web.xml에 서블릿을 매핑
    (DispatcherServlet등록&초기파라미터로 스프링설정파일등록)
    ※초기파라미터 미설정 시 : 서블릿 별칭(appServlet-context.xml)
                                      을 이용해서 Spring이 자동적으로 
                                      스프링컨테이너 생성

13-4.@Controller
    <<spring설정파일>>          │    <<Controller클래스>>
    -servlet-context.xml          →    -HomeController.class
        <annotation-driven />   │        @Controller
			            public class HomeController{...}

13-5.Controller객체 - @RequestMapping
    Controller내부의 메소드를 @RequestMapping("/...")을 통해 
    특정문자로 매핑시켜주고, 사용자로부터의 요청에 따라 특정 메소드를
    실행할 수 있게 해준다.

13-6.Controller객체 - Model타입의 파라미터
    개발자는 Model객체에 데이터를 담아서 DispatcherServlet에 전달한다.
        model.setAttribute("속성이름",속성값);
    전달된 Model데이터는 View에서 가공되어 클라이언트에게 응답처리된다.

13-7.View객체
    설정파일
        <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <beans:property name="prefix" value="/WEB-INF/vies/" />
            <beans:property name="suffix" value=".jsp" />
        </beans:bean>
    =>JSP파일명 : /prefix/view페이지명.suffix
        ※view페이지명 : Controller의 실행된 메소드에서 받은 return값